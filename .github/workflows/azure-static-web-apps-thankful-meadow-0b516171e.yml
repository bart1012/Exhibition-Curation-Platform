name: Build and Deploy Blazor Web App to Azure Static Web Apps

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build Blazor App
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Publish Blazor App
        # Change the output path to a simple, predictable location.
        # This publishes the server-side app, which includes the client's static content.
        run: dotnet publish App/ECP.UI/ECP.UI.Server/ECP.UI.Server.csproj -c Release -o ./release-output

      # DEBUGGING STEP: List the contents of the published directory
      - name: Debug - List published files
        run: ls -R ./release-output

      # This should upload the folder that contains your static content.
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: blazor-app-artifact
          # The path to the 'wwwroot' folder, relative to the output of the publish command.
          path: ./release-output/wwwroot

  deploy_job:
    runs-on: ubuntu-latest
    needs: build_job
    name: Deploy to Azure Static Web Apps
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: blazor-app-artifact
          path: ./app-to-deploy

      # DEBUGGING STEP: List the contents of the downloaded artifact
      - name: Debug - List downloaded files
        run: ls -R ./app-to-deploy

      - name: Deploy to Azure Static Web Apps
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_THANKFUL_MEADOW_0B516171E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          # This should be the root of your static content after the artifact is downloaded.
          app_location: "./app-to-deploy"
          api_location: ""
          output_location: "/"
          skip_app_build: true
          skip_api_build: true
