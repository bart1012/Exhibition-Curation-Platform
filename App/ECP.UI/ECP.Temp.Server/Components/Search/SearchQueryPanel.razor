@rendermode InteractiveAuto
@using MudBlazor
@using ECP.UI.Server.Models
@using ECP.UI.Server.Components.Search
@inject IDialogService DialogService


@using ECP.UI.Server.Components.Shared
<MudGrid Class="pt-5">

    <MudItem xs="12" md="8" lg="8" Class="pt-0 pr-5">
        <SearchBar SearchBarColor="@SearchBarColor" SearchQuery="@SearchQuery"></SearchBar>
    </MudItem>
    <MudItem xs="12" md="4" lg="4" Class="d-flex align-center pa-0">
        <div class="search-button-container">
            <MudButton OnClick="OpenFilterDialog" Variant="Variant.Outlined" Color="Color.Dark" StartIcon="@Icons.Material.Filled.FilterList" Class="rounded-pill search-button">
                Filter
            </MudButton>

            <MudButtonGroup Color="Color.Default" Variant="Variant.Outlined">
                <MudMenu Icon="@Icons.Material.Filled.ArrowDropDown"
                         Class=" search-button "
                         Style="align-self: auto;"
                         AnchorOrigin="Origin.BottomLeft"
                         PopoverOrigin="Origin.TopCenter">
                    <ActivatorContent>
                        <MudButton Class="px-10 rounded-l-xl " Style="min-width: 12rem;">
                            @_sortText
                        </MudButton>
                    </ActivatorContent>
                    <ChildContent>
                        <MudMenuItem OnClick="@(() => SetSortField(0))">Creation Date</MudMenuItem>
                        <MudMenuItem OnClick="@(() => SetSortField(1))">Alphabetically</MudMenuItem>
                    </ChildContent>
                </MudMenu>
                <MudToggleIconButton Toggled="_isDescending"
                                     ToggledChanged="SetSortDirection"
                                     Icon="@Icons.Material.Filled.ArrowUpward"
                                     Color="@Color.Dark"
                                     ToggledIcon="@Icons.Material.Filled.ArrowDownward"
                                     ToggledColor="@Color.Dark"
                                     Class=" search-button rounded-r-xl" />
            </MudButtonGroup>
        </div>
    </MudItem>
</MudGrid>


@code {
    [Parameter]
    public string? SearchQuery { get; set; }

    [Parameter]
    public SearchBarColor SearchBarColor { get; set; } = SearchBarColor.BLACK;

    [Parameter]
    public EventCallback<string> OnFiltersChanged { get; set; }

    [Parameter]
    public EventCallback<SortOptions> OnSortChanged { get; set; }

    private string _sortText = "Sort";
    private string _sortBy = string.Empty;
    private bool _isDescending = true;

    private async Task OpenFilterDialog()
    {
        var parameters = new DialogParameters();
        var options = new DialogOptions
            {
                CloseOnEscapeKey = true,
                MaxWidth = MaxWidth.Small,
                FullWidth = true
            };

        var dialog = await DialogService.ShowAsync<ArtworkFilterDialog>("Filter Artworks", parameters, options);
        var result = await dialog.Result;

        if (!result.Canceled && result.Data != null)
        {
            var filters = (ArtworkFilters)result.Data;
            await ApplyFilters(filters);
        }
    }

    private async Task ApplyFilters(ArtworkFilters filters)
    {
        ArtworkFilterDialogHelper filterHelper = new(filters);
        string urlFilterQuery = filterHelper.BuildFilterQuery();
        OnFiltersChanged.InvokeAsync(urlFilterQuery);
    }

    private async void SetSortField(int id)
    {
        SetSortButtonText(id);
        _sortBy = id == 0 ? "date" : "title";
        await OnSortChanged.InvokeAsync(new SortOptions(){SortBy = _sortBy, IsDescending = _isDescending});

    }

    private async Task SetSortDirection(bool newIsDescending)
    {
        _isDescending = newIsDescending;
        await OnSortChanged.InvokeAsync(new SortOptions() { SortBy = _sortBy, IsDescending = _isDescending });

    }

    private void SetSortButtonText(int id)
    {


        switch (id)
            {
                case 0:
                    _sortText = "Creation Date";
                    break;
                case 1:
                    _sortText = "Alphabetically";
                    break;
            }

    }
}
