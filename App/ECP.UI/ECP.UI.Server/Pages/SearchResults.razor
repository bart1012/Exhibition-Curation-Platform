@page "/search"
@rendermode InteractiveAuto

@using ECP.UI.Server.Components.Error
@using ECP.UI.Server.Components.Shared
@using ECP.UI.Server.Components.Search

@inject ArtworkService ArtworkService
@inject NavigationManager NavManager
 
<SearchQueryPanel SearchQuery="@SearchQuery"></SearchQueryPanel>


<div class="search-results-container" style="display: flex; flex-direction: column; min-height: 100%; justify-content: center;">
    @if (_isLoading)
{
    <Loading></Loading>
}
else if (_artworkList != null)
{

    if (!_artworkList.Any())
    {
        <NoResultsMessage></NoResultsMessage>
    }
    else
    {
        <MasonryGrid List="@_artworkList"></MasonryGrid>

        <div class="pagination-container">
            <MudPagination SelectedChanged="PageChanged" Color="Color.Primary" class="flex-none px-0" Count="@_totalPages" Size="Size.Large" />
        </div>
    }

}
else if (_isServerError)
{
    <ServerErrorMessage></ServerErrorMessage>
}
</div>

@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "q")]
    public string SearchQuery { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "p")]
    public int PageNumber { get; set; }

    private bool _isServerError = false;

    private int _totalPages { get; set; }

    private List<ArtworkPreview>? _artworkList = null;

    private bool _isLoading = true;

    protected override async Task OnParametersSetAsync()
    {
        _isLoading = true;
        _artworkList = null;
        try
        {
            _artworkList = ArtworkSeeder.SeedPreviews();
            // var response = await ArtworkService.SearchArtworksByQueryAsync(SearchQuery, 20, PageNumber);

            // if (response.IsSuccess)
            // {
            //     _artworkList = response.Value.Data.ToList();
            //     _totalPages = response.Value.Info.TotalPages;
            // }
            // else
            // {
            //     _isServerError = true;
            // }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching search results from SearchResults.razor: {ex.Message}");
            _artworkList = null;
        }
        finally
        {
            _isLoading = false;
        }


    }

    private void PageChanged(int i)
    {
        NavManager.NavigateTo($"/search?q={SearchQuery}&p={i}");
    }
}
