@page "/search"

@using ECP.UI.Server.Components

@inject ArtworkService ArtworkService
@inject NavigationManager NavManager




<MudText Align="Align.Center" Typo="Typo.h1" style="font-size: 3rem" Class="pb-5"><b>Results for: @SearchQuery</b></MudText>
@if(artworkList != null && artworkList.Count > 0)
{
    <MasonryGrid List="@artworkList"></MasonryGrid>
}
else
{
    <div>No content error</div>
}

<div class="pagination-container">
    <MudPagination SelectedChanged="PageChanged" Color="Color.Primary" class="flex-none px-0" Count="@TotalPages" Size="Size.Large"/>
</div>

@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "q")]
    public string SearchQuery { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "p")]
    public int PageNumber { get; set; }

    public int TotalPages { get; set; }

    private List<ArtworkPreview> artworkList;

    protected override async Task OnParametersSetAsync()
    {
        var response = await ArtworkService.SearchArtworksByQueryAsync(SearchQuery, 20, PageNumber);

        if (response.IsSuccess)
        {
            artworkList = response.Value.Data.ToList();
            TotalPages = response.Value.Info.TotalPages;
        }


    }

    private void PageChanged(int i)
    {
        NavManager.NavigateTo($"/search?q={SearchQuery}&p={i}");
    }
}
