@using MudBlazor;
@using ECP.UI.Server.Components.Search
@inject NavigationManager NavManager
@implements IDisposable

    <MudAppBar Elevation="0"  Fixed="false" Color="Color.Transparent">
 
  
   
    @if (NavManager.ToBaseRelativePath(NavManager.Uri) != "")
    {
        <MudLink Color="Color.Default"
                 Href="/"
                 >
            Home
        </MudLink>
        <MudSpacer />
        <MudLink Href="/collections" Class="nav-link collections-link rounded-pill" Underline="Underline.None">
            <MudIcon Icon="@Icons.Material.Filled.CollectionsBookmark" Style="height: 100%;" />
            Collections
        </MudLink>
        <MudLink Href="/search" Class="nav-link explore-link collections-link rounded-pill" Underline="Underline.None">
            <MudIcon Icon="@Icons.Material.Filled.Explore" Style="height: 100%;" />
            Explore
        </MudLink>
        <div class="search-controls">
            <SearchBar SearchBarColor="SearchBarColor.WHITE"></SearchBar>
        </div>
     
    }
    </MudAppBar>


<style>
 

    .nav-link {
        display: flex;
        padding: 0.3rem 1rem 0.3rem 1rem;
        flex-direction: row;
        align-content: center;
        align-items: center;
        color: dimgray;
        margin-left: 1rem;
        transition: transform 1s ease-in-out;
    }

    .explore-link{  
        margin-right: 1.5rem;
        margin-left: 0.5rem !important;
    }

        .nav-link svg {
        fill: gray !important;
        margin-right: 0.5rem;
    }

        .nav-link:hover {
            background-color: #e3e3e3;
      }
</style>
 


@code{
    

    protected override void OnInitialized()
    {
        NavManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object sender, LocationChangedEventArgs e)
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        NavManager.LocationChanged -= OnLocationChanged;
    }
  
}